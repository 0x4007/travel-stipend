name: Batch Travel Stipend Calculation

on:
  push:
  workflow_dispatch:
    inputs:
      origins:
        description: "List of origin cities (comma-separated)"
        required: true
        type: string
      destinations:
        description: "List of destination cities (comma-separated)"
        required: true
        type: string
      start_dates:
        description: "List of conference start dates (comma-separated)"
        required: true
        type: string
      end_dates:
        description: "List of conference end dates (comma-separated), blank = same as start date"
        required: false
        type: string
        default: ""
      ticket_prices:
        description: "List of conference ticket prices (comma-separated), blank = 0"
        required: false
        type: string
        default: ""

defaults:
  run:
    shell: bash

env:
  TEST_EVENTS: |
    [
      {"name": "Asia Blockchain Summit", "origin": "seoul", "destination": "taipei", "start": "Aug 6", "end": "Aug 8", "price": "0"},
      {"name": "Korea Blockchain Week", "origin": "seoul", "destination": "seoul", "start": "Sep 1", "end": "Sep 7", "price": "0"},
      {"name": "TOKEN2049 Singapore", "origin": "seoul", "destination": "singapore", "start": "Sep 18", "end": "Sep 19", "price": "0"},
      {"name": "GitHub Universe", "origin": "seoul", "destination": "san francisco", "start": "Oct 29", "end": "Oct 30", "price": "0"},
      {"name": "Devcon 7 Bangkok", "origin": "san francisco", "destination": "bangkok", "start": "Nov 12", "end": "Nov 15", "price": "0"},
      {"name": "Consensus Hong Kong", "origin": "seoul", "destination": "hong kong", "start": "Feb 18", "end": "Feb 20", "price": "0"}
    ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: oven-sh/setup-bun@v1

      - name: Process Inputs
        id: set-matrix
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Use test events for push triggers
            echo "Using test events from .github/test-events.json"
            matrix=$(bun .github/scripts/generate-stipend-matrix.ts --test-events .github/test-events.json 2>/dev/null)
            if [ $? -ne 0 ]; then
              echo "Error: Failed to generate matrix from test events"
              exit 1
            fi
          else
            # Use workflow inputs for manual triggers
            echo "${{ inputs.origins }}" | tr ',' '\n' > origins.txt
            echo "${{ inputs.destinations }}" | tr ',' '\n' > destinations.txt
            echo "${{ inputs.start_dates }}" | tr ',' '\n' > start_dates.txt
            echo "${{ inputs.end_dates }}" | tr ',' '\n' > end_dates.txt
            echo "${{ inputs.ticket_prices }}" | tr ',' '\n' > ticket_prices.txt
            matrix=$(bun .github/scripts/generate-stipend-matrix.ts 2>/dev/null)
          fi

          # Debug output
          echo "Generated matrix:"
          echo "$matrix"

          # Set the output
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  calculate:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false # Continue other jobs if one fails
    outputs:
      result: ${{ steps.calculate.outputs.result }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Calculate Stipend
        env:
          INPUT_ORIGIN: ${{ matrix.origin }}
          INPUT_DESTINATION: ${{ matrix.destination }}
          INPUT_CONFERENCE_START: ${{ matrix.startDate }}
          INPUT_CONFERENCE_END: ${{ matrix.endDate }}
          INPUT_TICKET_PRICE: ${{ matrix.price }}
          INPUT_OUTPUT_FORMAT: "json"
        id: calculate
        run: |
          echo "::group::Starting calculation for ${{ matrix.destination }} (${{ matrix.startDate }})"
          echo "Input parameters:"
          echo "Origin: ${{ matrix.origin }}"
          echo "Destination: ${{ matrix.destination }}"
          echo "Dates: ${{ matrix.startDate }} to ${{ matrix.endDate }}"
          echo "Ticket price: ${{ matrix.price }}"

          # Run once with JSON output and save to file
          echo "Running calculation and saving to results-${{ matrix.destination }}-${{ matrix.startDate }}.json"
          bun src/github-action-handler.ts --output-file "results-${{ matrix.destination }}-${{ matrix.startDate }}.json"
          echo "Calculation complete, output saved"

          # For logs, run again with table format
          echo "::group::Detailed calculation results"
          bun src/github-action-handler.ts --output-format table
          echo "::endgroup::"
          echo "::endgroup::"

      - name: Prepare Upload
        run: |
          echo "Preparing to upload result artifact: result-${{ matrix.destination }}-${{ matrix.startDate }}"
          ls -la results-${{ matrix.destination }}-${{ matrix.startDate }}.json
          echo "File size: $(wc -c <results-${{ matrix.destination }}-${{ matrix.startDate }}.json) bytes"

      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: result-${{ matrix.destination }}-${{ matrix.startDate }}
          path: results-${{ matrix.destination }}-${{ matrix.startDate }}.json
          retention-days: 5

  consolidate:
    needs: [calculate]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Prepare for Download
        run: |
          echo "Preparing to download result artifacts to matrix-results/"
          mkdir -p matrix-results
          ls -la matrix-results/

      - name: Download All Results
        uses: actions/download-artifact@v4
        with:
          path: matrix-results
          pattern: result-*
          merge-multiple: true

      - name: Verify Download
        run: |
          echo "Downloaded artifacts:"
          ls -la matrix-results/
          echo "Total files: $(ls matrix-results/ | wc -l)"

      - name: Create Sample Results Directory
        run: |
          mkdir -p sample-results
          cp matrix-results/results-*.json sample-results/ || true

      - name: Consolidate Results
        run: |
          echo "::group::Consolidating all results"
          echo "Input files:"
          ls -la matrix-results/
          bun .github/scripts/consolidate-stipend-results.ts
          echo "Consolidation complete"
          echo "::endgroup::"

      - name: Upload Consolidated Results
        uses: actions/upload-artifact@v4
        with:
          name: travel-stipend-results
          path: |
            consolidated-results.md
            consolidated-results/
          retention-days: 5
